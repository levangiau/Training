{"version":3,"sources":["components/todolist/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Todolist","props","todo","ontodoClick","className","map","todos","onClick","handleClick","title","id","defaultProps","App","useState","todolist","settodoClick","indexx","findIndex","x","console","log","newtodolist","slice","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAeA,SAASA,EAASC,GAAQ,IACdC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YAUd,OACI,8BACI,oBAAIC,UAAU,YAAd,SACKF,EAAKG,KAAI,SAAAC,GAAK,OACX,oBAEIC,QAAS,YAX7B,SAAqBL,GACbC,GACAA,EAAYD,GASiBM,CAAYF,IAFjC,SAIEA,EAAMG,OAJCH,EAAMI,WApBnCV,EAASW,aAAe,CACpBT,KAAM,GACNC,YAAa,MA6BFH,QCHAY,MAhCf,WAAgB,IAAD,EACmBC,mBAAS,CACvC,CAACH,GAAG,EAAED,MAAM,sBACZ,CAACC,GAAG,EAAED,MAAM,0BACZ,CAACC,GAAG,EAAED,MAAM,qBAJD,mBACNK,EADM,KACGC,EADH,KAwBb,OACE,gCACD,wCACA,cAAC,EAAD,CAAUb,KAAQY,EAAUX,YArB7B,SAA2BD,GAOzB,IAAMc,EAASF,EAASG,WAAU,SAAAC,GAAC,OAAIA,EAAER,KAAOR,EAAKQ,MACrD,KAAGM,EAAS,GAAZ,CAGAG,QAAQC,IAAIJ,GAEZ,IAAMK,EAAW,YAAOP,GACxBO,EAAYC,MAAMC,MAAM,GACxBR,EAAaM,WCfFG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f0fe261b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nTodolist.propTypes = {\n    todo: PropTypes.array,\n    ontodoClick: PropTypes.func,\n};\n//neu o todo:PropTypes.array.required thi ta khong can khai bao bien mac dinh\n\n//khoi tao gia tri mac dinh cho Todolist\nTodolist.defaultProps = {\n    todo: [],\n    ontodoClick: null,\n}\n\nfunction Todolist(props) {\n    const { todo, ontodoClick } = props\n    /**\n     * todo.map(): ham nay the hien => lay gia tri du lieu cua props truyen vao (da khoi tao [todo,ontodoClick]=props) va in ra gia tri tren props truyen vao\n     * todo =>() : ham nay the hien => the hien return ve cai ma minh mong muon thuc hien\n     */\n    function handleClick(todo) {\n        if (ontodoClick) {\n            ontodoClick(todo)\n        }\n    }\n    return (\n        <div>\n            <ul className=\"todo-list\">\n                {todo.map(todos => (\n                    <li key={todos.id}\n\n                        onClick={() => { handleClick(todos) }}\n\n                    >{todos.title}</li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Todolist;","\nimport React, { useState } from 'react';\n\n//import Colorbox from './components/colorbox';\nimport Todolist from './components/todolist';\n\nfunction App() {\n  const [todolist,settodoClick] = useState([\n    {id:1,title:'Thong tin chi tiet'},\n    {id:2,title:'ve ly thuyet thuc hien'},\n    {id:3,title:'cong viec React'},\n  ])\n  function handleontodoClick(todo){\n   \n    /**\n     * findIndex():ham tim kiem cua mang va tra ve gia thanh phan dau tien cua mang do => no se tra ve \"true\" neu tim thay va \"-1\" neu khong tim thay \n     * x=>x.id === todo.id: tra ve gia tri cua x khi so sanh gia tri cua mang \"x\" voi mang \"todo\" neu nhu no giong nhau.\n     * findIndex(x=>x.id === todo.id):=> x co gia tri: x = true khi x trung mang todo va x = -1 khi x khong tim thay tren mang \"todo\"\n     */\n    const indexx = todolist.findIndex(x => x.id === todo.id)\n    if(indexx < 0){\n      return\n    }\n    console.log(indexx)\n    //newtodolist= [...todolist]: tao \"newtodolist\" thanh mang \"todolist\" de chinh sua newtodolist theo y muon de tranh mang goc bi thay doi\n    const newtodolist = [...todolist]\n    newtodolist.slice(index,1)\n    settodoClick(newtodolist)\n\n  }\n  return (\n    <div>\n   <h1>Helllo</h1>\n   <Todolist todo = {todolist} ontodoClick={handleontodoClick}/>\n   </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}